<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item5" object-name="Workflow:name=generic" id="7119a728-03eb-44e3-98dd-07d60c780def" editor-version="2.0" version="0.2.0" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0">
    <display-name>Test RAC Add existing share disk</display-name>
    <description>Adds a virtual disk to a virtual machine.</description>
    <ref-types>(VC:VirtualMachine)</ref-types>
    <position y="60.0" x="50.0"/>
    <input>
        <param name="vm" type="VC:VirtualMachine">
            <description>Virtual machine to which to add the disk</description>
        </param>
        <param name="diskIndex" type="number">
            <description>Disk index</description>
        </param>
        <param name="scsiBusNumber" type="number">
            <description>SCSI controller bus number</description>
        </param>
        <param name="source_VM" type="VC:VirtualMachine"/>
    </input>
    <output/>
    <attrib name="scsiControllerKey" type="number">
        <value encoded="n">0.0</value>
        <description>LSI or Bus Logic SCSI controller key</description>
    </attrib>
    <attrib name="task" type="VC:Task">
        <value encoded="n"/>
        <description>Task to await</description>
    </attrib>
    <attrib name="progress" type="boolean">
        <value encoded="n">false</value>
        <description>Log progress while waiting for the task to complete</description>
    </attrib>
    <attrib name="pollRate" type="number">
        <value encoded="n">1.0</value>
        <description>Polling rate for the task state, in seconds</description>
    </attrib>
    <attrib name="noContollerError" type="string">
        <value encoded="n">Error: No controller found</value>
        <description>Error if virtual machine has no IDE controller</description>
    </attrib>
    <attrib name="Scsi_Type" type="string">
        <value encoded="n">PARA</value>
    </attrib>
    <attrib name="task_1" type="VC:Task">
        <value encoded="n"/>
        <description>Task to await</description>
    </attrib>
    <attrib name="sleepTime" type="number">
        <value encoded="n">10.0</value>
    </attrib>
    <attrib name="fileName" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="diskKey" type="number">
        <value encoded="n"/>
    </attrib>
    <attrib name="eagerlyScrub" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <attrib name="diskSharing" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="thinProvisioned" type="boolean">
        <value encoded="n">false</value>
        <description>Use thin provisioning?</description>
    </attrib>
    <attrib name="diskMode" type="VC:VirtualDiskMode">
        <value encoded="n">dunes://service.dunes.ch/CustomSDKObject?id='independent_persistent'&amp;dunesName='VC:VirtualDiskMode'</value>
        <description>Disk persistence mode</description>
    </attrib>
    <attrib name="isMultiwriter" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <workflow-item name="item0" out-name="item1" type="task" comparator="0">
        <display-name>Add disk</display-name>
        <script encoded="false">var configSpec = new VcVirtualMachineConfigSpec();
var deviceConfigSpecs = new Array();
var deviceConfigSpec;

// Add/Create the disk
deviceConfigSpec =  System.getModule("com.vmware.pso.util").addVirtualDiskFlatVer2ConfigSpec_all(scsiControllerKey,diskIndex,thinProvisioned,diskMode,eagerlyScrub,diskKey,diskSharing,fileName);
deviceConfigSpecs[0] = deviceConfigSpec;
System.log("------");
System.log(deviceConfigSpecs[0]);
// List of devices
configSpec.deviceChange = deviceConfigSpecs;

// Launch the reconfigVM task
task = vm.reconfigVM_Task( configSpec );
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="scsiControllerKey" type="number" export-name="scsiControllerKey"/>
            <bind name="diskMode" type="VC:VirtualDiskMode" export-name="diskMode"/>
            <bind name="diskIndex" type="number" export-name="diskIndex"/>
            <bind name="thinProvisioned" type="boolean" export-name="thinProvisioned"/>
            <bind name="eagerlyScrub" type="boolean" export-name="eagerlyScrub"/>
            <bind name="fileName" type="string" export-name="fileName"/>
            <bind name="diskKey" type="number" export-name="diskKey"/>
            <bind name="diskSharing" type="string" export-name="diskSharing"/>
        </in-binding>
        <out-binding>
            <bind name="task" type="VC:Task" export-name="task"/>
        </out-binding>
        <position y="140.27246949441846" x="332.77249587525944"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item11" type="task" comparator="0">
        <display-name>Retrieve Scsi controller found ?</display-name>
        <script encoded="false">scsiControllerKey = -1;
var devices = vm.config.hardware.device;
var isScsiBusNumberInvalid = true;
if(scsiBusNumber==null || scsiBusNumber&lt;0)
	scsiBusNumber=0;
if ( devices != null )  {
	for ( device in devices )  {
		if ( devices[device] instanceof VcVirtualBusLogicController || devices[device] instanceof VcVirtualLsiLogicController 
		|| devices[device] instanceof VcParaVirtualSCSIController || devices[device] instanceof VcVirtualLsiLogicSASController )  {
			if(scsiBusNumber==devices[device].busNumber){
				scsiControllerKey = devices[device].key;
				isScsiBusNumberInvalid = false;
				System.log( "SCSI controller found. (Key: " + scsiControllerKey + ")" );
				break;
			}
		}
	}
}
if(isScsiBusNumberInvalid){
	System.log( "SCSI controller not found. The bus number entered is invalid" );
}

</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="scsiBusNumber" type="number" export-name="scsiBusNumber"/>
        </in-binding>
        <out-binding>
            <bind name="scsiControllerKey" type="number" export-name="scsiControllerKey"/>
        </out-binding>
        <position y="75.0" x="10.0"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item0" alt-out-name="item7" type="condition" comparator="0">
        <display-name>Scsi controller found ?</display-name>
        <script encoded="false">//Generated by the system, cannot be edited
return (scsiControllerKey &gt;= 0.0) ;</script>
        <in-binding>
            <bind name="scsiControllerKey" type="number" export-name="scsiControllerKey"/>
        </in-binding>
        <out-binding/>
        <condition name="scsiControllerKey" type="number" comparator="5" label="null">0.0</condition>
        <position y="61.77931880948695" x="331.77249587525944"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item3" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd" comparator="0">
        <display-name>vim3WaitTaskEnd</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate) ;</script>
        <in-binding>
            <bind name="task" type="VC:Task" export-name="task">
                <description>Task to Wait for</description>
            </bind>
            <bind name="progress" type="boolean" export-name="progress">
                <description>Log progess while waiting for the task</description>
            </bind>
            <bind name="pollRate" type="number" export-name="pollRate">
                <description>Polling rate for the task state [seconds]</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="Any" export-name="NULL"/>
        </out-binding>
        <description>Wait a VIM 3 Task to end.
When task ended, return the </description>
        <position y="195.06699004236367" x="468.7587972451224"/>
    </workflow-item>
    <workflow-item name="item3" type="end" end-mode="0" comparator="0">
        <position y="185.06699004236367" x="673.1423588889581"/>
    </workflow-item>
    <workflow-item name="item7" out-name="item8" type="task" comparator="0">
        <display-name>Add Scsi controller</display-name>
        <script encoded="false">var configSpec = new VcVirtualMachineConfigSpec();&#13;
var deviceConfigSpecs = new Array();&#13;
var deviceConfigSpec;&#13;
System.log("Scsi_Type------"+ Scsi_Type);&#13;
deviceConfigSpec = System.getModule("com.vmware.pso.util").createVirtualScsiControllerConfigSpec_all(Scsi_Type, scsiBusNumber);&#13;
deviceConfigSpecs[0] = deviceConfigSpec;&#13;
System.log("------");&#13;
System.log(deviceConfigSpecs[0]);&#13;
// List of devices&#13;
configSpec.deviceChange = deviceConfigSpecs;&#13;
&#13;
// Launch the reconfigVM task&#13;
task_1 = vm.reconfigVM_Task( configSpec );</script>
        <in-binding>
            <bind name="Scsi_Type" type="string" export-name="Scsi_Type"/>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="scsiBusNumber" type="number" export-name="scsiBusNumber"/>
        </in-binding>
        <out-binding>
            <bind name="task_1" type="VC:Task" export-name="task_1"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="71.77931880948695" x="468.7587972451224"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item10" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd" comparator="0">
        <display-name>Action element</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate);
</script>
        <in-binding>
            <bind name="task" type="VC:Task" export-name="task_1"/>
            <bind name="progress" type="boolean" export-name="progress"/>
            <bind name="pollRate" type="number" export-name="pollRate"/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="Any" export-name=""/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="71.77931880948695" x="605.7450986149855"/>
    </workflow-item>
    <workflow-item name="item10" out-name="item0" type="task" comparator="0">
        <display-name>find scsi controller key</display-name>
        <script encoded="false">scsiControllerKey = -1;&#13;
var devices = vm.config.hardware.device;&#13;
var isScsiBusNumberInvalid = true;&#13;
if(scsiBusNumber==null || scsiBusNumber&lt;0)&#13;
	scsiBusNumber=0;&#13;
if ( devices != null )  {&#13;
	for ( device in devices )  {&#13;
		if ( devices[device] instanceof VcVirtualBusLogicController || devices[device] instanceof VcVirtualLsiLogicController &#13;
		|| devices[device] instanceof VcParaVirtualSCSIController || devices[device] instanceof VcVirtualLsiLogicSASController )  {&#13;
			if(scsiBusNumber==devices[device].busNumber){&#13;
				scsiControllerKey = devices[device].key;&#13;
				isScsiBusNumberInvalid = false;&#13;
				System.log( "SCSI controller found. (Key: " + scsiControllerKey + ")" );&#13;
				break;&#13;
			}&#13;
		}&#13;
	}&#13;
}&#13;
if(isScsiBusNumberInvalid){&#13;
	System.log( "SCSI controller not found. The bus number entered is invalid" );&#13;
}&#13;
&#13;
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="scsiBusNumber" type="number" export-name="scsiBusNumber"/>
        </in-binding>
        <out-binding>
            <bind name="scsiControllerKey" type="number" export-name="scsiControllerKey"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="140.27246949441846" x="605.7450986149855"/>
    </workflow-item>
    <workflow-item name="item11" out-name="item13" type="task" comparator="0">
        <display-name>Find Existing Disk</display-name>
        <script encoded="false">var devices = source_VM.config.hardware.device;&#13;
for ( device in devices )  {&#13;
    if(scsiControllerKey==devices[device].controllerKey &amp;&amp; diskIndex == devices[device].unitNumber ){&#13;
        fileName = devices[device].backing.fileName;&#13;
        diskKey = devices[device].key;&#13;
        eagerlyScrub = devices[device].backing.eagerlyScrub;&#13;
        thinProvisioned = devices[device].backing.thinProvisioned;&#13;
        diskSharing = devices[device].backing.sharing;&#13;
        //diskMode = devices[device].backing.diskMode;&#13;
        break;&#13;
    }&#13;
}&#13;
&#13;
if(diskSharing == "sharingMultiWriter"){&#13;
    System.log("diskSharing = "+ diskSharing)&#13;
    isMultiwriter == true;&#13;
}&#13;
</script>
        <in-binding>
            <bind name="scsiControllerKey" type="number" export-name="scsiControllerKey"/>
            <bind name="diskIndex" type="number" export-name="diskIndex"/>
            <bind name="source_VM" type="VC:VirtualMachine" export-name="source_VM"/>
        </in-binding>
        <out-binding>
            <bind name="fileName" type="string" export-name="fileName"/>
            <bind name="diskKey" type="number" export-name="diskKey"/>
            <bind name="eagerlyScrub" type="boolean" export-name="eagerlyScrub"/>
            <bind name="thinProvisioned" type="boolean" export-name="thinProvisioned"/>
            <bind name="diskSharing" type="string" export-name="diskSharing"/>
            <bind name="isMultiwriter" type="boolean" export-name="isMultiwriter"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="76.95652173913044" x="117.91304347826087"/>
    </workflow-item>
    <workflow-item name="item13" out-name="item6" alt-out-name="item14" type="custom-condition" comparator="0">
        <display-name>Source disk is multi-writer?</display-name>
        <script encoded="false">System.log("isMultiwriter = "+ isMultiwriter);&#13;
if(isMultiwriter == true){&#13;
    return true;&#13;
}</script>
        <in-binding>
            <bind name="isMultiwriter" type="boolean" export-name="isMultiwriter"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <position y="62.19178082191782" x="216.97260273972603"/>
    </workflow-item>
    <workflow-item name="item14" throw-bind-name="diskSharing" type="end" end-mode="1" business-status="" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="158.08219178082192" x="253.97260273972603"/>
    </workflow-item>
    <presentation>
        <p-step>
            <title>VM</title>
            <p-param name="vm">
                <desc>Virtual machine to which to add the disk</desc>
                <p-qual name="mandatory">true</p-qual>
                <p-qual name="show-select-as">list</p-qual>
                <p-qual name="contextualParameter"></p-qual>
            </p-param>
        </p-step>
        <p-step>
            <title>Disk</title>
            <p-group>
                <title>Disk information</title>
                <desc>'Disk index' must be between 0 and 15 (and not 7 as it's reserved by spec)</desc>
                <p-param name="datastore">
                    <desc>Datastore in which to put the virtual disk file</desc>
                    <p-qual name="mandatory">true</p-qual>
                    <p-qual name="show-select-as">list</p-qual>
                </p-param>
                <p-param name="diskMode">
                    <desc>Disk persistence mode</desc>
                    <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
                </p-param>
                <p-param name="diskIndex">
                    <desc>Disk index</desc>
                    <p-qual kind="static" name="numberFormat" type="String">#</p-qual>
                    <p-qual kind="static" name="minNumberValue" type="Number">0.0</p-qual>
                    <p-qual kind="static" name="maxNumberValue" type="Number">15.0</p-qual>
                    <p-qual name="mandatory">true</p-qual>
                    <p-qual kind="ognl" name="ognlValidator" type="String">(#diskIndex != 7 ? "": "7 is not valid" )</p-qual>
                </p-param>
                <p-param name="diskSize">
                    <desc>Disk size (in GB)</desc>
                    <p-qual name="mandatory">true</p-qual>
                    <p-qual kind="static" name="minNumberValue" type="Number">0.01</p-qual>
                </p-param>
                <p-param name="scsiBusNumber">
                    <desc>SCSI controller bus number</desc>
                    <p-qual kind="static" name="numberFormat" type="String">#</p-qual>
                    <p-qual kind="static" name="minNumberValue" type="Number">0</p-qual>
                </p-param>
                <p-param name="thinProvisioned">
                    <desc>Use thin provisioning?</desc>
                </p-param>
            </p-group>
        </p-step>
    </presentation>
</ns2:workflow>
