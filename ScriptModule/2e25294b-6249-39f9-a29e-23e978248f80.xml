<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="PasswordGenerator" result-type="Any" api-version="6.0.0" id="2e25294b-6249-39f9-a29e-23e978248f80" version="2.18.5" allowed-operations="vef" category-name="com.vmware.pscoe.library.util">
  <description><![CDATA[Password generator class used to generate random strings used as passwords.
If no configuraiton is specified it will use the following default configuration
{
segments: [{ //list of character segments to be used to generate the password
chars: "abcdefghijklmnopqrstuvwxyz", //list of charaters to be used as part of the segment
minOccurance: 2 //minimum number of occurances from the char sequenece
},
{
chars: "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
minOccurance: 1,
maxOccurance: 1
},
{
chars: "0123456789",
minOccurance: 1,
maxOccurance: 1
},
{
chars: "!@#%^&*()_+",
minOccurance: 1,
maxOccurance: 1
},
],
length: {
min: 8, // minimum length of the generated string
max: 20 // maximum length of the generated string
}
}
The configuration can also be specified as a input parameter of the constructor of the class or
as a JSON resource element: PSCoE/Library/pwdCfg.json]]></description>
  <script encoded="false"><![CDATA[var logger = System.getModule("com.vmware.pscoe.library.logging").getLogger(
	"com.vmware.pscoe.library.util.PasswordGenerator");
var ResourceElementAccessor = System.getModule("com.vmware.pscoe.library.util").ResourceElementAccessor();
var DEFAULT_CONFIG = {
	segments: [{
			chars: "abcdefghijklmnopqrstuvwxyz",
			minOccurance: 2
		},
		{
			chars: "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
			minOccurance: 1,
			maxOccurance: 1
		},
		{
			chars: "0123456789",
			minOccurance: 1,
			maxOccurance: 1
		},
		{
			chars: "!@#%^&*()_+",
			minOccurance: 1,
			maxOccurance: 1
		},
	],
	length: {
		min: 8,
		max: 20
	}
}

function pick(str, min, max) {
	var chars = '';
	var n = min;
	if (max) {
		n += Math.floor(Math.random() * (max - min));
	}
	for (var i = 0; i < n; i++) {
		chars += str.charAt(Math.floor(Math.random() * str.length));
	}
	return chars;
}

function shuffle(str) {
	var array = str.split('');
	var top = array.length - 1;

	if (top){
		while (top) {
			var current = Math.floor(Math.random() * (top + 1));
			var tmp = array[current];
			array[current] = array[top];
			array[top] = tmp;
			top -= 1;
		}
	}
	return array.join('');
}

function validate(pwdCfg) {
	var totalMax = 0;
	pwdCfg.segments.forEach(function (segment) {
		if (segment.minOccurance > segment.maxOccurance) {
			throw "Invalid segment configuration. Minimum is more then maximum for chars: " + segment.chars;
		}
		totalMax += segment.minOccurance
		if (segment.maxOccurance != undefined) {
			totalMax += segment.maxOccurance - segment.minOccurance
		}
	});
	if (pwdCfg.length.max && (pwdCfg.length.min > pwdCfg.length.max ||
		pwdCfg.length.max < totalMax)) {
		throw "Invalid Password configuration. Password length maximum is less then the minimum.";
	}
}

return function PasswordGenerator(options) {
	var pwdCfg = options;
	if (!options) {
		logger.debug("Options not provided. Loading from PSCoE/Library/pwdCfg.json resource element");
		pwdCfg = DEFAULT_CONFIG;
		try {
			var pwdCfgRe = ResourceElementAccessor.getByPath("PSCoE/Library", "pwdCfg.json");
			pwdCfg = pwdCfgRe.asJSON();
		} catch (e) {
			logger.debug("Unable to load resource element PSCoE/Library/pwdCfg.json using default values");
		}
	}
	validate(pwdCfg);

	this.getConfig = function() {
		return pwdCfg;
	}

	this.generate = function() {
		var password = '';
		var all = "";
		var totalMin = 0;
		pwdCfg.segments.forEach(function (segment) {
			totalMin += segment.minOccurance

			password += pick(segment.chars, segment.minOccurance, segment.maxOccurance);
			if (segment.maxOccurance == undefined) {
				all += segment.chars
			}
		});

		var min = pwdCfg.length.min - totalMin;
		if (min < 0) {
			min = 0
		}
		if (pwdCfg.length.max != password.length) {
			password += pick(all, min, pwdCfg.length.max - password.length);
		}
		return shuffle(password);
	}
}
]]></script>
</dunes-script-module>